#!/bin/bash
## Crafted (c) 2021 by Daitanlabs - We are stronger together
## Prepared : Roberto Nogueira
## File     : today
## Project  : project-today-manager
## Reference: bash
## Depends  : tree, todotxt, xclip
## Purpose  : Help to manage gtd process flow implemented in the file system.

# set -x

_inbox(){ cd $TODAY_INBOX; }
_inbox.methods(){ echo "collect|help|list"; }
_inbox.collect(){
  local project=$1
  if test -d $TODAY_INBOX; then
    mv $1 $TODAY_INBOX
    ls -la $TODAY_INBOX
  fi
}
_inbox.help(){ printf "\e[1;37m%s\e[0m \e[1;36m%s\e[0m\n" "inbox" "[$(inbox.methods)]"; }
_inbox.list(){ ls -la $TODAY_INBOX; }

_logbook(){ cd $TODAY_LOGBOOK; }
_logbook.methods(){ echo "help|list"; }
_logbook.help(){ printf "\e[1;37m%s\e[0m \e[1;36m%s\e[0m\n" "logbook" "[$(logbook.methods)]"; }
_logbook.list(){ tree -L 1 $TODAY_LOGBOOK; }

_projects(){ cd $TODAY_PROJECTS; }
_projects.methods(){ echo "help|list|new"; }
_projects.help(){ printf "\e[1;37m%s\e[0m \e[1;36m%s\e[0m\n" "projects" "[$(projects.methods)]"; }
_projects.list(){ ls -la $TODAY_PROJECTS; }
_projects.new(){
  local project=$1

  if [ "$PWD" == "$TODAY_INBOX" ]; then
    ! test -d $TODAY_PROJECTS/$1 && mkdir -p $TODAY_PROJECTS/$1
    mv * $TODAY_PROJECTS/$1
    pushd $TODAY_PROJECTS/$1
  fi
}

_scheduled(){ cd $TODAY_SCHEDULED; }
_scheduled.methods(){ echo "help|list|init|end|today"; }
_scheduled.help(){ printf "\e[1;37m%s\e[0m \e[1;36m%s\e[0m\n" "scheduled" "[$(scheduled.methods)]"; }
_scheduled.list(){ tree -L 1 $TODAY_SCHEDULED; }
_scheduled.init(){
  local project=$(basename $(pwd))
  if test -L $TODAY_PROJECTS/$project; then
    ln -sf $TODAY_PROJECTS/$project $TODAY_SCHEDULED/$project
  fi
}
_scheduled.end(){
  local project=$(basename $(pwd))
  if test -L $TODAY_SCHEDULED/$project; then
    rm $TODAY_SCHEDULED/$project
  fi
}
_scheduled.today(){
  local project=$(basename $(pwd))
  if test -L $TODAY_SCHEDULED/$project; then
    ln -sf $(readlink -f $TODAY_SCHEDULED/$project) $TODAY/$project
    rm $TODAY_SCHEDULED/$project
  fi
}

_someday(){ cd $TODAY_SOMEDAY; }
_someday.methods(){ echo "help|list|init|end|today"; }
_someday.help(){ printf "\e[1;37m%s\e[0m \e[1;36m%s\e[0m\n" "scheduled" "[$(scheduled.methods)]"; }
_someday.list(){ tree -L 1 $TODAY_SCHEDULED; }
_someday.init(){
  local project=$(basename $(pwd))
  if test -L $TODAY_PROJECTS/$project; then
    ln -sf $TODAY_SOMEDAY/$project $TODAY_PROJECTS/$project
  fi
}
_someday.end(){
  local project=$(basename $(pwd))
  if test -L $TODAY_SOMEDAY/$project; then
    rm $TODAY_SOMEDAY/$project
  fi
}
_someday.today(){
  local project=$(basename $(pwd))
  if test -L $TODAY_SOMEDAY/$project; then
    ln -sf $(readlink -f $TODAY_SOMEDAY/$project) $TODAY/$project
    rm $TODAY_SOMEDAY/$project
  fi
}

# today
today(){
  local today_methods="+($(today.methods))"
  local today_forward_methods="+($(today.forward_methods))"
  case $1 in
    --version|-v|v|version)
      today.version
      ;;
    --help|-h|h|help)
      printf "\e[1;37m%s \e[0m\n" "Crafted (c) 2021 by Daitanlabs - We are stronger together"
      today.version
      printf "\e[1;37m%s \e[0m%s\n" "today" "$(today.help)" 
      printf "\e[1;37m%s \e[0m%s\n" "     " "[$(_inbox.help)]" 
      printf "\e[1;37m%s \e[0m%s\n" "     " "[$(_logbook.help)]" 
      printf "\e[1;37m%s \e[0m%s\n" "     " "[$(_projects.help)]" 
      printf "\e[1;37m%s \e[0m%s\n" "     " "[$(_scheduled.help)]" 
      printf "\e[1;37m%s \e[0m%s\n" "     " "[$(_someday.help)]" 
      printf "\n"  
      printf "\e[0;32m%s \e[4m%s\e[0m\e[0m\n" "homepage" "http://bitbucket.wrs.com/users/rmartins/repos/project-today-manager"
      printf "\n"
      ;;
    $today_methods)
      today.$1 ${@:2}
      ;;
    $today_forward_methods)
      _$1 ${@:2}
      ;;
    *)
      if [ -z "$1" ]; then
        pushd $TODAY
      else   
        printf " \e[0;31m%s \e[0m%s\n" "=>" "invalid parameter ${1}"
      fi  
      ;;
  esac
}
today.setup(){
  export TODAY_UPDATE_MESSAGE="Initial version"
  export TODAY_VERSION=v1.0.07
  export TODAY_VERSION_DATE=2022.01.05
  
  export TODAY_THINGS=$HOME/Things
  
  export TODAY_INBOX=$TODAY_THINGS/Inbox
  export TODAY_LOGBOOK=$TODAY_THINGS/Logbook
  export TODAY_PROJECTS=$TODAY_THINGS/Projects
  export TODAY_SCHEDULED=$TODAY_THINGS/Scheduled
  export TODAY_SOMEDAY=$TODAY_THINGS/Someday
  export TODAY=$TODAY_THINGS/Today

  alias tdy='today'
  alias tdyl='today.list'
  alias tdyi='today.init'
  alias tdye='today.end'
  
  alias tdp='_projects'
  alias tdpl='_projects.list'
  alias tdpn='_projects.new'
  
  alias tdl='_logbook'
  alias tdll='_logbook.list'
  
  alias tdsd='_someday'
  alias tdsdl='_someday.list'
  alias tdsdi='_someday.init'
  alias tdsde='_someday.end'
  alias tdsdt='_someday.today'
  
  alias tdi='_inbox'
  alias tdic='_inbox.collect'
  alias tdil='_inbox.list'
  
  alias tds='_scheduled'
  alias tdsl='_scheduled.list'
  alias tdsi='_scheduled.init'
  alias tdse='_scheduled.end'
  alias tdse='_scheduled.today'

  ! test -d $TODAY_THINGS && mkdir -p $TODAY_THINGS

  ! test -d $TODAY_INBOX && mkdir -p $TODAY_INBOX
  ! test -d $TODAY_LOGBOOK && mkdir -p $TODAY_LOGBOOK
  ! test -d $TODAY_PROJECTS && mkdir -p $TODAY_PROJECTS
  ! test -d $TODAY_SCHEDULED && mkdir -p $TODAY_SCHEDULED
  ! test -d $TODAY_SOMEDAY && mkdir -p $TODAY_SOMEDAY
  ! test -d $TODAY && mkdir -p $TODAY

  ! test -L $HOME/Inbox && ln -sf $TODAY_INBOX $HOME/Inbox
  ! test -L $HOME/Logbook && ln -sf $TODAY_LOGBOOK $HOME/Logbook
  ! test -L $HOME/Projects && ln -sf $TODAY_PROJECTS $HOME/Projects
  ! test -L $HOME/Someday && ln -sf $TODAY_SOMEDAY $HOME/Someday
  ! test -L $HOME/Scheduled && ln -sf $TODAY_SCHEDULED $HOME/Scheduled
  ! test -L $HOME/Today && ln -sf $TODAY $HOME/Today
}
today.methods(){ echo "help|list|init|end|setup|version"; }
today.forward_methods(){ echo "inbox|logbook|projects|scheduled|someday"; }
today.help(){ printf "\e[1;37m%s\e[0m\e[1;36m%s\e[0m\n" "" "[$(today.methods)]"; }
today.list(){ tree -L 1 $TODAY; }
today.init(){
  local project=$(basename $(pwd))
  if test -d $TODAY_PROJECTS/$project; then
    ln -sf $TODAY_PROJECTS/$project $TODAY/$project
  fi
}
today.end(){
  local project=$(basename $(pwd))
  if test -L $TODAY/$project; then
    ln -sf $(readlink -f $TODAY/$project) $TODAY_LOGBOOK/$project
    rm $TODAY/$project
  fi
}
today.version(){
  printf "\e[0;37m%s \e[0m%s\n" "Today" "$TODAY_VERSION"
  printf "\n"
}

today.setup